// Generated by CoffeeScript 1.3.3
(function() {

  define(["jquery", "lodash", "backbone", "wysihtml5", "rules_simple"], function($, _, Backbone, Wysihtml5, rules) {
    var TextEditor;
    return TextEditor = Backbone.View.extend({
      id: 'app_wysihtml5_editor',
      tagName: "textarea",
      target: void 0,
      editor: void 0,
      toolbar: "<div id='app_wysihtml5_toolbar'></div>",
      offset: {
        left: void 0,
        top: void 0
      },
      initialize: function() {},
      create: function(target, coords) {
        try {
          this.undelegateEvents();
          this.$el.remove();
          this.el.value = '';
        } catch (err) {

        }
        this.target = target;
        return this.render(coords);
      },
      render: function() {
        this.el.value = this.target.innerHTML;
        $('body').append(this.el, this.toolbar);
        this.editor = new Wysihtml5.Editor(this.el, {
          toolbar: 'app_wysihtml5_toolbar',
          parserRules: rules
        });
        return this.setCss();
      },
      delegateEvents: function() {
        $(frames['page_iframe'].window).on('scroll', _.bind(this.scroll, this));
        return $(frames['page_iframe'].window).on('blur', _.bind(this.blur, this));
      },
      scroll: function() {
        var top;
        top = this.offset.top - app.context.scrollTop();
        return this.editor.currentView.iframe.style.top = top + 'px';
      },
      setCss: function() {
        var css;
        this.offset = $(this.target).offset();
        this.offset.top = this.offset.top + 60;
        css = {
          top: (this.offset.top - app.context.scrollTop()) + 'px',
          left: this.offset.left + 'px',
          height: ($(this.target).height() + 3) + 'px',
          width: $(this.target).width() + 'px',
          border: 0,
          color: Wysihtml5.dom.getStyle('color').from(this.target),
          padding: Wysihtml5.dom.getStyle('padding').from(this.target),
          font: Wysihtml5.dom.getStyle('font').from(this.target)
        };
        this.$el.css(css);
        return $(this.editor.currentView.iframe).css(css);
      }
    });
  });

}).call(this);
