// Generated by CoffeeScript 1.3.3
(function() {

  define(["jquery", "lodash", "backbone", "app/contextmenu/text"], function($, _, Backbone, TextMenu) {
    var ContextMenu;
    return ContextMenu = Backbone.View.extend({
      tagName: "div",
      id: "app_contextMenu",
      contextMenus: {
        'DIV|NAV|H1|H2|H3|H4|H5|H6|P|A|SPAN': new TextMenu()
      },
      menu: null,
      position: {},
      initialize: function() {
        return app.context.on('contextmenu', _.bind(this.click, this)).on('click', _.bind(this.hideMenu, this)).append("<link rel='stylesheet' href='/_admin/assets/css/iframe.css' />");
      },
      render: function() {
        $(app.context).append(this.el);
        return this.$el.css({
          position: 'absolute',
          top: this.position.y,
          left: this.position.x
        });
      },
      click: function(event) {
        var elements, menu, _ref;
        this.position.x = event.pageX;
        this.position.y = event.pageY;
        _ref = this.contextMenus;
        for (elements in _ref) {
          menu = _ref[elements];
          elements = elements.split('|');
          if (elements.indexOf(event.target.tagName) >= 0) {
            this.showMenu(menu, event.target);
            break;
          }
        }
        return false;
      },
      showMenu: function(type, element) {
        this.hideMenu();
        this.menu = type;
        this.menu.setTarget(element).render().delegateEvents();
        this.$el.html(this.menu.el);
        return this.render();
      },
      hideMenu: function() {
        if (this.menu) {
          this.menu.undelegateEvents();
          this.menu.unsetTarget().remove();
          this.$el.remove();
        }
        return this.menu = null;
      }
    });
  });

}).call(this);
