// Generated by CoffeeScript 1.3.3
(function() {

  define(["jquery", "lodash"], function($, _) {
    var xpath;
    return xpath = {
      getElementCount: function(element, opts) {
        var i, previous;
        previous = element.previousSibling;
        i = 1;
        while (previous) {
          if (previous.nodeType !== 1) {
            previous = previous.previousSibling;
            continue;
          }
          if ((opts && opts["class"] && previous.getAttribute('class') !== element.getAttribute('class')) || (opts && opts.id && previous.getAttribute('id') !== element.getAttribute('id'))) {
            previous = previous.previousSibling;
            continue;
          }
          if (previous.localName === element.localName) {
            i++;
          }
          previous = previous.previousSibling;
        }
        return i;
      },
      find: function(element, iframe) {
        var all_nodes, node, segments, uniqueIdCount, _i, _len;
        if (iframe) {
          all_nodes = frames[iframe].document.getElementsByTagName('*');
        } else {
          all_nodes = document.getElementsByTagName('*');
        }
        segments = [];
        while (element && element.nodeType === 1) {
          if (element.hasAttribute('id')) {
            uniqueIdCount = 0;
            for (_i = 0, _len = all_nodes.length; _i < _len; _i++) {
              node = all_nodes[_i];
              if (node.hasAttribute('id') && node.id === element.id) {
                uniqueIdCount++;
              }
              if (uniqueIdCount > 1) {
                break;
              }
            }
            if (uniqueIdCount === 1) {
              segments.unshift('id("' + element.getAttribute('id') + '")');
              return segments.join("/");
            } else {
              segments.unshift(element.localName.toLowerCase() + '[@id="' + element.getAttribute('id') + '"][' + xpath.getElementCount(element, {
                id: element.getAttte('id')
              }) + ']');
            }
          } else {
            segments.unshift(element.localName.toLowerCase() + '[' + xpath.getElementCount(element) + ']');
          }
          element = element.parentNode;
        }
        if (segments.length) {
          return '/' + segments.join('/');
        } else {
          return null;
        }
      }
    };
  });

}).call(this);
